{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-guard.service.ts","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.scss","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.scss","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.scss","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.scss","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/my-products/my-products.component.html","webpack:///./src/app/my-products/my-products.component.scss","webpack:///./src/app/my-products/my-products.component.ts","webpack:///./src/app/post-product/post-product.component.html","webpack:///./src/app/post-product/post-product.component.scss","webpack:///./src/app/post-product/post-product.component.ts","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.scss","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.scss","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/rest-api.service.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.scss","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home/home.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { PostProductComponent } from './post-product/post-product.component';\nimport { MyProductsComponent } from './my-products/my-products.component';\nimport { CategoryComponent } from './category/category.component';\nimport { ProductComponent } from './product/product.component';\nimport { SearchComponent } from './search/search.component';\nimport { CartComponent } from './cart/cart.component';\n\nimport { AuthGuardService } from './auth-guard.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n  },\n  {\n    path: 'search',\n    component: SearchComponent,\n  },\n  {\n    path: 'cart',\n    component: CartComponent,\n  },\n  {\n    path: 'categories',\n    component: CategoriesComponent,\n  },\n  {\n    path: 'categories/:id',\n    component: CategoryComponent,\n  },\n  {\n    path: 'product/:id',\n    component: ProductComponent,\n  },\n  {\n    path: 'register',\n    component: RegistrationComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'profile/settings',\n    component: SettingsComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'profile/postproduct',\n    component: PostProductComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: 'profile/myproducts',\n    component: MyProductsComponent,\n    canActivate: [AuthGuardService],\n  },\n  {\n    path: '**',\n    redirectTo: '',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-main\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">\\n      <img src=\\\"./assets/img/logo.png\\\" alt=\\\"logo\\\" id=\\\"logo\\\"> Amazono\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" (click)=\\\"isCollapsed = !isCollapsed\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div [ngbCollapse]=\\\"isCollapsed\\\" style=\\\"align-items: left; margin-left: 50px;\\\" class=\\\"collapse navbar-collapse flex-column\\\"\\n      id=\\\"navbarNav\\\">\\n      <div class=\\\"input-group w-75\\\">\\n        <input type=\\\"text\\\" name=\\\"search\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchTerm\\\" (keyup.enter)=\\\"search()\\\">\\n        <span id=\\\"searchBtn\\\" class=\\\"bg-warning\\\" (click)=\\\"search()\\\">\\n          <i class=\\\"fa fa-search\\\"></i>\\n        </span>\\n      </div>\\n      <div class=\\\"w-100\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a (click)=\\\"collapse()\\\" routerLink=\\\"/categories\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">Categories</a>\\n          </li>\\n          <li class=\\\"nav-item ml-0 ml-md-auto\\\" ngbDropdown #dropdown=\\\"ngbDropdown\\\">\\n            <a class=\\\"nav-link dropdown-toggle\\\" ngbDropdownToggle>\\n              <i class=\\\"fa fa-user mr-1\\\"></i>\\n              <span *ngIf=\\\"!token\\\">Accounts</span>\\n              <span *ngIf=\\\"data.user\\\">{{ data.user.name }}</span>\\n            </a>\\n            <div ngbDropdownMenu class=\\\"dropdown-menu\\\">\\n              <a *ngIf=\\\"token\\\" (click)=\\\"closeDropdown(dropdown);collapse();\\\" routerLink=\\\"/profile\\\" class=\\\"dropdown-item\\\">\\n                <i class=\\\"fa fa-user-circle\\\" aria-hidden=\\\"true\\\"></i> Profile\\n              </a>\\n              <a *ngIf=\\\"!token\\\" (click)=\\\"closeDropdown(dropdown);collapse();\\\" routerLink=\\\"/login\\\" class=\\\"dropdown-item\\\">\\n                <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i> Login\\n              </a>\\n              <a *ngIf=\\\"token\\\" (click)=\\\"closeDropdown(dropdown);collapse();logout();\\\" class=\\\"dropdown-item\\\">\\n                <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i> Logout\\n              </a>\\n              <a *ngIf=\\\"!token\\\" (click)=\\\"closeDropdown(dropdown);collapse();\\\" routerLink=\\\"/register\\\" class=\\\"dropdown-item\\\">\\n                <i class=\\\"fa fa-group\\\" aria-hidden=\\\"true\\\"></i> Register\\n              </a>\\n            </div>\\n          </li>\\n          <li class=\\\"nav-item ml-0 ml-md-2\\\">\\n            <a (click)=\\\"collapse()\\\" routerLink=\\\"/cart\\\" routerLinkActive=\\\"active\\\" class=\\\"nav-link\\\">\\n              <i class=\\\"fa fa-shopping-cart mr-1\\\"></i>\\n              Cart\\n              <span *ngIf=\\\"data.cartItems\\\" class=\\\"badge badge-warning ml-1\\\">{{ data.cartItems }}</span>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n<footer id=\\\"main-footer\\\" class=\\\"bg-main text-white mt-5 p-5\\\">\\n  <div class=\\\"container\\\">\\n    <p class=\\\"lead text-center\\\">Copyright &copy; 2018 Amazono</p>\\n  </div>\\n</footer>\\n\"","module.exports = \"#searchBtn {\\n  cursor: pointer;\\n  border: none;\\n  padding: 0.375rem 0.75rem;\\n  margin-bottom: 0;\\n  font-size: 1rem;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  border-top-right-radius: 0.25rem;\\n  border-bottom-right-radius: 0.25rem; }\\n\\n#logo {\\n  width: 50px; }\\n\"","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataService } from './data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  searchTerm = '';\n  isCollapsed = true;\n\n  constructor(private router: Router, private data: DataService) {\n    this.data.cartItems = this.data.getCart().length;\n    this.data.getProfile();\n  }\n\n  get token() {\n    return localStorage.getItem('token');\n  }\n\n  collapse() {\n    this.isCollapsed = true;\n  }\n\n  closeDropdown(dropdown) {\n    dropdown.close();\n  }\n\n  logout() {\n    this.data.user = {};\n    this.data.cartItems = 0;\n    localStorage.clear();\n    this.router.navigate(['']);\n  }\n\n  search() {\n    if (this.searchTerm) {\n      this.collapse();\n      this.router.navigate(['search', { query: this.searchTerm }]);\n    }\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\n\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { RestApiService } from './rest-api.service';\nimport { DataService } from './data.service';\nimport { AuthGuardService } from './auth-guard.service';\n\nimport { HomeComponent } from './home/home.component';\nimport { MessageComponent } from './message/message.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { LoginComponent } from './login/login.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { PostProductComponent } from './post-product/post-product.component';\nimport { MyProductsComponent } from './my-products/my-products.component';\nimport { CategoryComponent } from './category/category.component';\nimport { ProductComponent } from './product/product.component';\nimport { SearchComponent } from './search/search.component';\nimport { CartComponent } from './cart/cart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MessageComponent,\n    RegistrationComponent,\n    LoginComponent,\n    ProfileComponent,\n    SettingsComponent,\n    CategoriesComponent,\n    PostProductComponent,\n    MyProductsComponent,\n    CategoryComponent,\n    ProductComponent,\n    SearchComponent,\n    CartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NgbModule.forRoot(),\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [RestApiService, DataService, AuthGuardService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    if (localStorage.getItem('token')) {\n      return state.url.startsWith('/profile')\n        ? true\n        : (this.router.navigate(['/']), false);\n    } else {\n      return state.url.startsWith('/profile')\n        ? (this.router.navigate(['/']), false)\n        : true;\n    }\n  }\n}\n","module.exports = \"<section id=\\\"cart\\\">\\n  <div class=\\\"container-fluid p-5\\\">\\n    <app-message></app-message>\\n    <h3 *ngIf=\\\"!cartItems.length\\\" class=\\\"display-2 text-center mt-5\\\">Cart is Empty</h3>\\n    <div *ngIf=\\\"cartItems.length\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-9\\\">\\n        <p class=\\\"lead font-weight-bold\\\">Shopping Cart</p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-8 col-2 d-none d-md-block\\\">\\n            <p>\\n              <small class=\\\"text-muted\\\">Price</small>\\n            </p>\\n          </div>\\n          <div class=\\\"col-2 d-none d-md-block\\\">\\n            <p>\\n              <small class=\\\"text-muted\\\">Quantity</small>\\n            </p>\\n          </div>\\n        </div>\\n        <hr class=\\\"mt-0\\\">\\n        <div *ngFor=\\\"let item of cartItems; let i=index; trackBy: trackByCartItems;\\\" class=\\\"cartItem\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4 col-md-2\\\">\\n              <a routerLink=\\\"/product/{{ item._id }}\\\">\\n                <img src=\\\"{{ item.image }}\\\" alt=\\\"productImage\\\" class=\\\"img-fluid img-thumbnail\\\">\\n              </a>\\n            </div>\\n            <div class=\\\"col-5 col-md-6\\\">\\n              <h5>\\n                <a routerLink=\\\"/product/{{ item._id }}\\\">{{ item.title }}</a>\\n              </h5>\\n              <p class=\\\"m-0\\\">\\n                <small class=\\\"text-muted\\\">{{ item.owner.name }}</small>\\n              </p>\\n              <p class=\\\"m-0\\\">\\n                <small class=\\\"text-muted\\\">{{ item.category.name }}</small>\\n              </p>\\n              <a class=\\\"text-danger\\\" (click)=\\\"removeProduct(i, item)\\\">Delete</a>\\n            </div>\\n            <div class=\\\"col-1 col-md-2\\\">\\n              <h6 class=\\\"font-weight-bold text-danger\\\">{{ item.price | currency }}</h6>\\n            </div>\\n            <div class=\\\"col-1 mt-5 mt-md-0 p-0\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" min=\\\"1\\\" max=\\\"99\\\" [(ngModel)]=\\\"quantities[i]\\\">\\n            </div>\\n          </div>\\n          <hr>\\n        </div>\\n        <h5 class=\\\"text-right\\\">Total:\\n          <span class=\\\"ml-1 font-weight-bold text-danger\\\">{{ cartTotal | currency }}</span>\\n        </h5>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"card bg-light\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5>Total:\\n              <span class=\\\"ml-1 font-weight-bold text-danger\\\">{{ cartTotal | currency }}</span>\\n            </h5>\\n            <br>\\n            <button class=\\\"btn btn-warning btn-block\\\" (click)=\\\"checkout()\\\" [disabled]=\\\"btnDisabled\\\">Checkout</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"input::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { environment } from '../../environments/environment';\nimport { DataService } from '../data.service';\nimport { RestApiService } from '../rest-api.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n})\nexport class CartComponent implements OnInit {\n  btnDisabled = false;\n  handler: any;\n\n  quantities = [];\n\n  constructor(\n    private data: DataService,\n    private rest: RestApiService,\n    private router: Router,\n  ) {}\n\n  trackByCartItems(index: number, item: any) {\n    return item._id;\n  }\n\n  get cartItems() {\n    return this.data.getCart();\n  }\n\n  get cartTotal() {\n    let total = 0;\n    this.cartItems.forEach((data, index) => {\n      total += data['price'] * this.quantities[index];\n    });\n    return total;\n  }\n\n  removeProduct(index, product) {\n    this.quantities.splice(index, 1);\n    this.data.removeFromCart(product);\n  }\n\n  ngOnInit() {\n    this.cartItems.forEach(data => {\n      this.quantities.push(1);\n    });\n    this.handler = StripeCheckout.configure({\n      key: environment.stripeKey,\n      image: 'assets/img/logo.png',\n      locale: 'auto',\n      token: async stripeToken => {\n        let products;\n        products = [];\n        this.cartItems.forEach((d, index) => {\n          products.push({\n            product: d['_id'],\n            quantity: this.quantities[index],\n          });\n        });\n\n        try {\n          const data = await this.rest.post(\n            'http://localhost:3030/api/payment',\n            {\n              totalPrice: this.cartTotal,\n              products,\n              stripeToken,\n            },\n          );\n          data['success']\n            ? (this.data.clearCart(), this.data.success('Purchase Successful.'))\n            : this.data.error(data['message']);\n        } catch (error) {\n          this.data.error(error['message']);\n        }\n      },\n    });\n  }\n\n  validate() {\n    if (!this.quantities.every(data => data > 0)) {\n      this.data.warning('Quantity cannot be less than one.');\n    } else if (!localStorage.getItem('token')) {\n      this.router.navigate(['/login']).then(() => {\n        this.data.warning('You need to login before making a purchase.');\n      });\n    } else if (!this.data.user['address']) {\n      this.router.navigate(['/profile/address']).then(() => {\n        this.data.warning('You need to login before making a purchase.');\n      });\n    } else {\n      this.data.message = '';\n      return true;\n    }\n  }\n\n  checkout() {\n    this.btnDisabled = true;\n    try {\n      if (this.validate()) {\n        this.handler.open({\n          name: 'Amazono',\n          description: 'Checkout Payment',\n          amount: this.cartTotal * 100,\n          closed: () => {\n            this.btnDisabled = false;\n          },\n        });\n      } else {\n        this.btnDisabled = false;\n      }\n    } catch (error) {\n      this.data.error(error);\n    }\n  }\n}\n","module.exports = \"<section id=\\\"categories\\\">\\n  <div class=\\\"container p-5\\\">\\n    <app-message></app-message>\\n    <h4 class=\\\"display-4\\\">Categories</h4>\\n    <hr>\\n    <div *ngIf=\\\"!categories\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"categories\\\" class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let category of categories\\\" routerLink=\\\"/categories/{{ category._id }}\\\" class=\\\"list-group-item list-group-item-action\\\">\\n      {{ category.name }}\\n      </a>\\n    </div>\\n    <hr style=\\\"margin-top: 15rem;\\\">\\n    <div class=\\\"card bg-light mt-5\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">Add New Category</h4>\\n        <hr>\\n        <div class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Category</label>\\n            <input type=\\\"text\\\" name=\\\"newCategory\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"newCategory\\\">\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"addCategory()\\\" [disabled]=\\\"btnDisabled\\\">Add Category</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { RestApiService } from '../rest-api.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.scss']\n})\nexport class CategoriesComponent implements OnInit {\n  categories: any;\n\n  newCategory = '';\n  btnDisabled = false;\n\n  constructor(\n    private data: DataService,\n    private rest: RestApiService\n  ) { }\n\n  async ngOnInit() {\n    try {\n      const data = await this.rest.get(\n        'http://localhost:3030/api/categories'\n      );\n      // console.log(data);\n      data['success']\n        ? (this.categories = data['categories'])\n        : this.data.error(data['message']);\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n  }\n\n  async addCategory() {\n    this.btnDisabled = true;\n    try {\n      const data = await this.rest.post(\n        'http://localhost:3030/api/categories',\n        { name: this.newCategory }\n      );\n      data['success']\n        ? this.data.success(data['message'])\n        : this.data.error(data['message']);\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n    this.btnDisabled = false;\n  }\n\n}\n","module.exports = \"<section id=\\\"category\\\">\\n  <div class=\\\"container p-3 p-md-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!category\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <h3 *ngIf=\\\"category && !category.products.length\\\" class=\\\"display-2 text-center mt-5\\\">No Products inside Category</h3>\\n    <div *ngIf=\\\"category && category.products.length\\\">\\n      <p>{{ lower }}-{{ upper }} of {{ category.totalProducts }} products in {{ category.categoryName }}</p>\\n      <hr>\\n      <div class=\\\"product\\\" *ngFor=\\\"let product of category.products\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-5 col-md-2\\\">\\n            <a routerLink=\\\"/product/{{ product._id }}\\\">\\n              <img [src]=\\\"product.image\\\" alt=\\\"productImage\\\" class=\\\"img-fluid img-thumbnail\\\">\\n            </a>\\n          </div>\\n          <div class=\\\"col-5 col-md-8\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-6\\\">\\n                <h5>\\n                  <a routerLink=\\\"/product/{{ product._id }}\\\">{{ product.title }}</a>\\n                </h5>\\n                <p>\\n                  <small class=\\\"text-muted\\\">{{ product.category.id }}</small>\\n                </p>\\n                <p>{{ product.price | currency }}</p>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <ngb-rating [(rate)]=\\\"product.averageRating\\\" [starTemplate]=\\\"t\\\" [readonly]=\\\"true\\\" max=\\\"5\\\"></ngb-rating>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <hr>\\n      </div>\\n      <ngb-pagination [collectionSize]=\\\"category.totalProducts\\\" [pageSize]=\\\"10\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"getProducts($event)\\\"></ngb-pagination>\\n    </div>\\n  </div>\\n</section>\\n\\n<ng-template #t let-fill=\\\"fill\\\">\\n  <span *ngIf=\\\"fill === 100\\\" class=\\\"star full\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill === 0\\\" class=\\\"star\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill < 100 && fill > 0\\\" class=\\\"star\\\">\\n    <span class=\\\"half\\\" [style.width.%]=\\\"fill\\\">&#9733;</span>&#9733;\\n  </span>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { RestApiService } from '../rest-api.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss'],\n})\nexport class CategoryComponent implements OnInit {\n  categoryId: any;\n  category: any;\n  page = 1;\n\n  constructor(\n    private data: DataService,\n    private activatedRoute: ActivatedRoute,\n    private rest: RestApiService,\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(res => {\n      this.categoryId = res['id'];\n      this.getProducts();\n    });\n  }\n\n  get lower() {\n    return 10 * (this.page - 1) + 1;\n  }\n\n  get upper() {\n    return Math.min(10 * this.page, this.category.totalProducts);\n  }\n\n  async getProducts(event?: any) {\n    if (event) {\n      this.category = null;\n    }\n    try {\n      const data = await this.rest.get(\n        `http://localhost:3030/api/categories/${this.categoryId}?page=${this\n          .page - 1}`,\n      );\n      console.log(data);\n      data['success']\n        ? (this.category = data)\n        : this.data.error(data['message']);\n    } catch (error) {\n      console.log(error);\n      this.data.error(error['message']);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NavigationStart, Router } from '@angular/router';\n\nimport { RestApiService } from './rest-api.service';\n\n@Injectable()\nexport class DataService {\n  message = '';\n  messageType = 'danger';\n\n  user: any;\n  cartItems = 0;\n\n  constructor(private router: Router, private rest: RestApiService) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.message = '';\n      }\n    });\n  }\n\n  error(message) {\n    this.messageType = 'danger';\n    this.message = message;\n  }\n\n  success(message) {\n    this.messageType = 'success';\n    this.message = message;\n  }\n\n  warning(message) {\n    this.messageType = 'warning';\n    this.message = message;\n  }\n\n  async getProfile() {\n    try {\n      if (localStorage.getItem('token')) {\n        const data = await this.rest.get(\n          'http://localhost:3030/api/accounts/profile',\n        );\n        console.log(data);\n        console.log(\"user needed\");\n        this.user = data['user'];\n        console.log(this.user);\n      }\n    } catch (e) {\n      this.error(e);\n    }\n  }\n\n  getCart() {\n    const cart = localStorage.getItem('cart');\n    return cart ? JSON.parse(cart) : [];\n  }\n\n  addToCart(item: string) {\n    const cart: any = this.getCart();\n    if (cart.find(data => JSON.stringify(data) === JSON.stringify(item))) {\n      return false;\n    } else {\n      cart.push(item);\n      this.cartItems++;\n      localStorage.setItem('cart', JSON.stringify(cart));\n      return true;\n    }\n  }\n\n  removeFromCart(item: string) {\n    let cart: any = this.getCart();\n    if (cart.find(data => JSON.stringify(data) === JSON.stringify(item))) {\n      cart = cart.filter(data => JSON.stringify(data) !== JSON.stringify(item));\n      this.cartItems--;\n      localStorage.setItem('cart', JSON.stringify(cart));\n    }\n  }\n\n  clearCart() {\n    this.cartItems = 0;\n    localStorage.setItem('cart', '[]');\n  }\n}\n","module.exports = \"<section id=\\\"home\\\">\\n  <div class=\\\"container-fluid d-none d-md-block\\\">\\n    <ngb-carousel>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image1.jpg\\\" alt=\\\"first\\\" class=\\\"item\\\">\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image2.jpg\\\" alt=\\\"second\\\" class=\\\"item\\\">\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image3.jpg\\\" alt=\\\"third\\\" class=\\\"item\\\">\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image4.jpg\\\" alt=\\\"fourth\\\" class=\\\"item\\\">\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image5.jpg\\\" alt=\\\"fifth\\\" class=\\\"item\\\">\\n      </ng-template>\\n    </ngb-carousel>\\n  </div>\\n  <div class=\\\"container p-5\\\">\\n    <app-message></app-message>\\n    <p class=\\\"lead\\\">\\n      <b>Recommended Deals: Last-Minute Deals</b>\\n    </p>\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"!products\\\" class=\\\"m-auto\\\">\\n        <h1 class=\\\"text-center display-3 mt-5\\\">\\n          <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </h1>\\n      </div>\\n      <div *ngFor=\\\"let product of products\\\" class=\\\"col-md-3 mb-5\\\">\\n        <a routerLink=\\\"/product/{{ product._id }}\\\">\\n          <div class=\\\"card bg-light\\\">\\n            <img src=\\\"{{ product.image }}\\\" alt=\\\"product\\\" class=\\\"card-img-top\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{ product.title }}</h5>\\n              <p class=\\\"card-text\\\">{{ product.price | currency }}</p>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"ngb-carousel {\\n  min-width: 1000px;\\n  max-width: 1500px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.item {\\n  position: relative;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%); }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { RestApiService } from '../rest-api.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  products: any;\n\n  constructor(private data: DataService, private rest: RestApiService) {}\n\n  async ngOnInit() {\n    try {\n      const data = await this.rest.get('http://localhost:3030/api/products');\n      data['success']\n        ? (this.products = data['products'])\n        : this.data.error('Could not fetch products.');\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n  }\n}\n","module.exports = \"<section id=\\\"loginPage\\\">\\n  <div class=\\\"container p-5\\\">\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-lg-4 offset-lg-4\\\">\\n        <app-message></app-message>\\n        <div class=\\\"card bg-light\\\">\\n          <div class=\\\"card-body\\\">\\n            <h4 class=\\\"text-center\\\">Login</h4>\\n            <hr>\\n            <form>\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\">\\n              </div>\\n              <hr>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"login()\\\" [disabled]=\\\"btnDisabled\\\">Login</button>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { RestApiService } from '../rest-api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit {\n  email = '';\n  password = '';\n\n  btnDisabled = false;\n\n  constructor(\n    private router: Router,\n    private rest: RestApiService,\n    private data: DataService,\n  ) {}\n\n  ngOnInit() {}\n\n  validate() {\n    if (this.email) {\n      if (this.password) {\n        return true;\n      } else {\n        this.data.error('Password is not entered');\n      }\n    } else {\n      this.data.error('Email is not entered.');\n    }\n  }\n\n  async login() {\n    this.btnDisabled = true;\n    try {\n      if (this.validate()) {\n        const data = await this.rest.post(\n          'http://localhost:3030/api/accounts/login',\n          {\n            email: this.email,\n            password: this.password\n          },\n        );\n        if (data['success']) {\n          localStorage.setItem('token', data['token']);\n          console.log(\"TOKEN BEEELOWWWW:\");\n          console.log(data['token']);\n          this.router.navigate(['/']);\n        } else {\n          this.data.error(data['message']);\n        }\n      }\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n    this.btnDisabled = false;\n  }\n}\n","module.exports = \"<p *ngIf=\\\"data.message\\\">\\n  <ngb-alert [type]=\\\"data.messageType\\\" [dismissible]=\\\"false\\\">\\n    {{ data.message }}\\n  </ngb-alert>\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.scss']\n})\nexport class MessageComponent implements OnInit {\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section id=\\\"myProducts\\\">\\n  <div class=\\\"container p-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!products\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <h3 *ngIf=\\\"products && !products.length\\\" class=\\\"display-2 text-center mt-5\\\">My Products is Empty</h3>\\n    <div *ngIf=\\\"products && products.length\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <h4 class=\\\"display-4\\\">My Products</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-10 col-2 d-none d-md-block\\\">\\n            <p>\\n              <small class=\\\"text-muted\\\">Price</small>\\n            </p>\\n          </div>\\n        </div>\\n        <hr class=\\\"mt-0\\\">\\n        <div *ngFor=\\\"let product of products\\\" class=\\\"product\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4 col-md-2\\\">\\n              <a routerLink=\\\"/product/{{ product.id }}\\\">\\n                <img src=\\\"{{ product.image }}\\\" alt=\\\"image\\\" class=\\\"img-fluid img-thumbnail\\\">\\n              </a>\\n            </div>\\n            <div class=\\\"col-5 col-md-8\\\">\\n              <h5>\\n                <a routerLink=\\\"/product/{{ product.id }}\\\">{{ product.title }}</a>\\n                <p class=\\\"m-0\\\">\\n                  <small class=\\\"text-muted\\\">{{ product.category.name }}</small>\\n                </p>\\n              </h5>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n              <h6 class=\\\"font-weight-bold text-danger\\\">{{ product.price | currency }}</h6>\\n            </div>\\n          </div>\\n          <hr>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { RestApiService } from '../rest-api.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-my-products',\n  templateUrl: './my-products.component.html',\n  styleUrls: ['./my-products.component.scss']\n})\nexport class MyProductsComponent implements OnInit {\n\n  products: any;\n\n  constructor(private data: DataService, private rest: RestApiService) { }\n\n  async ngOnInit() {\n    try {\n      const data = await this.rest.get(\n        'http://localhost:3030/api/seller/products'\n      );\n      data['success']\n        ? (this.products = data['products'])\n        : this.data.error(data['message']);\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n  }\n\n}\n","module.exports = \"<section id=\\\"postProduct\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">Post a Product for Sale</h4>\\n    <hr>\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!categories\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"categories\\\" class=\\\"card bg-light\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Title</label>\\n            <input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.title\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Price</label>\\n            <input type=\\\"number\\\" name=\\\"price\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"product.price\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Category</label>\\n            <select name=\\\"categoryId\\\" [(ngModel)]=\\\"product.categoryId\\\" class=\\\"custom-select\\\">\\n              <option *ngFor=\\\"let category of categories\\\" [value]=\\\"category._id\\\">\\n                {{ category.name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n            <textarea class=\\\"form-control\\\" name=\\\"description\\\" rows=\\\"5\\\" [(ngModel)]=\\\"product.description\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Upload Image</label>\\n            <input type=\\\"file\\\" class=\\\"form-control-file\\\" accept=\\\"image/*\\\" name=\\\"file\\\" (change)=\\\"fileChange($event)\\\">\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"post()\\\" [disabled]=\\\"btnDisabled\\\">Post</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { RestApiService } from '../rest-api.service';\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-post-product',\n  templateUrl: './post-product.component.html',\n  styleUrls: ['./post-product.component.scss']\n})\nexport class PostProductComponent implements OnInit {\n\n  product = {\n    title: '',\n    price: 0,\n    categoryId: '',\n    description: '',\n    product_picture: null\n  };\n\n  categories: any;\n  btnDisabled = false;\n\n  constructor(\n    private data: DataService,\n    private rest: RestApiService,\n    private router: Router\n  ) { }\n\n  async ngOnInit() {\n    try {\n      const data = await this.rest.get(\n        'http://localhost:3030/api/categories'\n      );\n      data['success']\n        ? (this.categories = data['categories'])\n        : this.data.error(data['message']);\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n  }\n\n  validate(product) {\n    if (product.title) {\n      if (product.price) {\n        if (product.categoryId) {\n          if (product.description) {\n            if (product.product_picture) {\n              return true;\n            } else {\n              this.data.error('Please select product image.');\n            }\n          } else {\n            this.data.error('Please enter description.');\n          }\n        } else {\n          this.data.error('Please select category.');\n        }\n      } else {\n        this.data.error('Please enter a price.');\n      }\n    } else {\n      this.data.error('Please enter a title.');\n    }\n  }\n\n  fileChange(event: any) {\n    this.product.product_picture = event.target.files[0];\n  }\n\n  async post() {\n    this.btnDisabled = true;\n    try {\n      if (this.validate(this.product)) {\n        const form = new FormData();\n        for (const key in this.product) {\n          if (this.product.hasOwnProperty(key)) {\n            if (key === 'product_picture') {\n              form.append(\n                'product_picture',\n                this.product.product_picture,\n                this.product.product_picture.name\n              );\n            } else {\n              form.append(key, this.product[key]);\n            }\n          }\n        }\n        const data = await this.rest.post(\n          'http://localhost:3030/api/seller/products',\n          form\n        );\n        data['success']\n          ? this.router.navigate(['/profile/myproducts'])\n            .then(() => this.data.success(data['message']))\n            .catch(error => this.data.error(error))\n          : this.data.error(data['message']);\n      }\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n    this.btnDisabled = false;\n  }\n\n}\n","module.exports = \"<section id=\\\"product\\\">\\n  <div class=\\\"container-fluid p-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!product\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"product\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n          <img [src]=\\\"product.image\\\" alt=\\\"productImage\\\" class=\\\"image img-thumbnail\\\">\\n        </div>\\n        <div class=\\\"col-lg-5\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <h4>{{ product.title }}</h4>\\n              <p class=\\\"m-0\\\">\\n                <small>by {{ product.owner.name }}</small>\\n              </p>\\n              <p class=\\\"m-0\\\">\\n                <small class=\\\"text-muted\\\">{{ product.category.name }}</small>\\n              </p>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <ngb-rating [(rate)]=\\\"product.averageRating\\\" [starTemplate]=\\\"t\\\" [readonly]=\\\"true\\\" max=\\\"5\\\"></ngb-rating>\\n            </div>\\n          </div>\\n          <hr>\\n          <p class=\\\"lead\\\">{{ product.description }}</p>\\n        </div>\\n        <div class=\\\"col-lg-3\\\">\\n          <div class=\\\"card bg-light\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Price: {{ product.price | currency }}</h5>\\n              <br>\\n              <br>\\n              <a class=\\\"btn btn-warning btn-block\\\" (click)=\\\"addToCart()\\\">Add to Cart</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div>\\n        <div class=\\\"mt-5 ml-lg-5\\\">\\n          <h4>Reviews</h4>\\n          <hr>\\n          <div class=\\\"reviews\\\">\\n            <div *ngFor=\\\"let review of product.reviews\\\" class=\\\"review\\\">\\n              <div class=\\\"p-3\\\">\\n                <img [src]=\\\"review.owner.pictureUrl\\\" alt=\\\"\\\" width=\\\"75px\\\" class=\\\"rounded-circle\\\">\\n                <p class=\\\"lead d-inline ml-3\\\">{{ review.owner.name }}</p>\\n                <br>\\n                <br>\\n                <ngb-rating [(rate)]=\\\"review.rating\\\" [starTemplate]=\\\"t\\\" [readonly]=\\\"true\\\" max=\\\"5\\\"></ngb-rating>\\n                <p class=\\\"ml-2 d-inline font-weight-bold\\\">{{ review.title }}</p>\\n                <p class=\\\"mt-3\\\">{{ review.description }}</p>\\n              </div>\\n              <hr>\\n            </div>\\n            <div class=\\\"card bg-light my-5\\\">\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">Add a review</h4>\\n                <hr>\\n                <div class=\\\"form\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Title</label>\\n                    <input type=\\\"text\\\" name=\\\"title\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"myReview.title\\\">\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <textarea class=\\\"form-control\\\" rows=\\\"5\\\" name=\\\"description\\\" [(ngModel)]=\\\"myReview.description\\\"></textarea>\\n                  </div>\\n                  <label>Rating</label>\\n                  <br>\\n                  <ngb-rating [(rate)]=\\\"myReview.rating\\\" [starTemplate]=\\\"t\\\" [readonly]=\\\"false\\\" max=\\\"5\\\"></ngb-rating>\\n                  <br>\\n                  <br>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"postReview()\\\" [disabled]=\\\"btnDisabled\\\">Post Review</button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n<ng-template #t let-fill=\\\"fill\\\">\\n  <span *ngIf=\\\"fill === 100\\\" class=\\\"star full\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill === 0\\\" class=\\\"star\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill < 100 && fill > 0\\\" class=\\\"star\\\">\\n    <span class=\\\"half\\\" [style.width.%]=\\\"fill\\\">&#9733;</span>&#9733;\\n  </span>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { RestApiService } from '../rest-api.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss'],\n})\nexport class ProductComponent implements OnInit {\n  myReview = {\n    title: '',\n    description: '',\n    rating: 0,\n  };\n  btnDisabled = false;\n\n  product: any;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private data: DataService,\n    private rest: RestApiService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(res => {\n      this.rest\n        .get(`http://localhost:3030/api/product/${res['id']}`)\n        .then(data => {\n          console.log(data);\n          console.log(\"product needed\");\n          data['success']\n            ? (this.product = data['product'])\n            : this.router.navigate(['/']);\n        })\n        .catch(error => this.data.error(error['message']));\n    });\n  }\n\n  addToCart() {\n    this.data.addToCart(this.product)\n      ? this.data.success('Product successfully added to cart.')\n      : this.data.error('Product has already been added to cart.');\n  }\n\n  async postReview() {\n    this.btnDisabled = true;\n    try {\n      const data = await this.rest.post('http://localhost:3030/api/review', {\n        productId: this.product._id,\n        title: this.myReview.title,\n        description: this.myReview.description,\n        rating: this.myReview.rating,\n      });\n      data['success']\n        ? this.data.success(data['message'])\n        : this.data.error(data['message']);\n      this.btnDisabled = false;\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n  }\n}\n","module.exports = \"<section id=\\\"profile\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">My Profile</h4>\\n    <hr>\\n    <div *ngIf=\\\"!data.user\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"data.user\\\" class=\\\"row mt-5\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <img [src]=\\\"data.user.pictureUrl\\\" alt=\\\"userimage\\\" class=\\\"rounded-circle image\\\">\\n      </div>\\n      <div class=\\\"col-md-8 ml-3\\\">\\n        <p id=\\\"name\\\" class=\\\"lead\\\">{{ data.user.name }}</p>\\n        <a routerLink=\\\"/profile/orders\\\" class=\\\"btn btn-warning\\\">My Orders</a>\\n        <br>\\n        <br>\\n        <a routerLink=\\\"/profile/settings\\\" class=\\\"btn btn-warning\\\">Change Account Settings</a>\\n        <br>\\n        <br>\\n        <div *ngIf=\\\"data.user.isSeller\\\">\\n          <p class=\\\"lead\\\">Seller Actions</p>\\n          <hr>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <a routerLink=\\\"/profile/postproduct\\\" class=\\\"btn btn-outline-success btn-block\\\">Post Product for Sale</a>\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <a routerLink=\\\"/profile/myproducts\\\" class=\\\"btn btn-outline-info btn-block\\\">My Products</a>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"#name {\\n  font-size: 2rem; }\\n\"","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../data.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(private data: DataService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<section id=\\\"registrationPage\\\">\\n  <div class=\\\"container p-5\\\">\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-lg-4 offset-lg-4\\\">\\n        <app-message></app-message>\\n        <div class=\\\"card bg-light\\\">\\n          <div class=\\\"card-body\\\">\\n            <h4 class=\\\"text-center\\\">Registration</h4>\\n            <hr>\\n            <form>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Name</label>\\n                <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"name\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Address</label>\\n                <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"address\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Email</label>\\n                <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Password</label>\\n                <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\">\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Confirm Password</label>\\n                <input type=\\\"password\\\" name=\\\"password1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password1\\\">\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input type=\\\"checkbox\\\" name=\\\"isSeller\\\" class=\\\"form-check-input\\\" [(ngModel)]=\\\"isSeller\\\"> Register as Seller\\n                </label>\\n              </div>\\n              <hr>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"register()\\\" [disabled]=\\\"btnDisabled\\\">Register</button>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { RestApiService } from '../rest-api.service';\nimport { DataService } from '../data.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.scss'],\n})\nexport class RegistrationComponent implements OnInit {\n  name = '';\n  email = '';\n  password = '';\n  password1 = '';\n  address = \"\";\n  isSeller = false;\n\n  btnDisabled = false;\n\n  constructor(\n    private router: Router,\n    private data: DataService,\n    private rest: RestApiService,\n  ) {}\n\n  ngOnInit() {}\n\n  validate() {\n    if (this.name) {\n      if (this.email) {\n        if (this.password) {\n          if (this.password1) {\n            if (this.password === this.password1) {\n              if (this.address) {\n                return true;\n              } else {\n                this.data.error('you must provide address');\n              }\n            } else {\n              this.data.error('Passwords do not match.');\n            }\n          } else {\n            this.data.error('Confirmation Password is not entered');\n          }\n        } else {\n          this.data.error('Password is not entered');\n        }\n      } else {\n        this.data.error('Email is not entered.');\n      }\n    } else {\n      this.data.error('Name is not entered.');\n    }\n  }\n\n  async register() {\n    this.btnDisabled = true;\n    try {\n      if (this.validate()) {\n        const data = await this.rest.post(\n          'http://localhost:3030/api/accounts/signup',\n          {\n            name: this.name,\n            email: this.email,\n            password: this.password,\n            isSeller: this.isSeller,\n            address : this.address\n          },\n        );\n        if (data['success']) {\n          localStorage.setItem('token', data['token']);\n          console.log(\"TOOOOKEN BELOW :\");\n          console.log(data['token']);\n          this.data.success('Registration successful!');\n        } else {\n          this.data.error(data['message']);\n        }\n      }\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n    this.btnDisabled = false;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable()\nexport class RestApiService {\n\n  constructor(private http: HttpClient) { }\n\n  getHeaders() {\n    const token = localStorage.getItem('token');\n    return token ? new HttpHeaders().set('authorization', token) : null;\n  }\n\n  get(link: string) {\n    return this.http.get(link, { headers: this.getHeaders() }).toPromise();\n  }\n\n  post(link: string, body: any) {\n    return this.http.post(link, body, { headers: this.getHeaders() }).toPromise();\n  }\n}\n","module.exports = \"<section id=\\\"search\\\">\\n  <div class=\\\"container p-3 p-md-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!content\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <h3 *ngIf=\\\"content && !content.nbHits\\\" class=\\\"display-2 text-center mt-5\\\">No Results</h3>\\n    <div *ngIf=\\\"content && content.nbHits\\\">\\n      <p>{{ lower }}-{{ upper }} of {{ content.nbHits }} results for\\n        <span class=\\\"text-warning\\\">\\\"{{ query }}\\\"</span>\\n      </p>\\n      <hr>\\n      <div class=\\\"product\\\" *ngFor=\\\"let product of content.hits\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-5 col-md-2\\\">\\n            <a routerLink=\\\"/product/{{ product.objectID }}\\\">\\n              <img [src]=\\\"product.image\\\" alt=\\\"productImage\\\" class=\\\"img-fluid img-thumbnail\\\">\\n            </a>\\n          </div>\\n          <div class=\\\"col-5 col-md-8\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-6\\\">\\n                <h5>\\n                  <a routerLink=\\\"/product/{{ product.objectID }}\\\">{{ product.title }}</a>\\n                </h5>\\n                <p>\\n                  <small>by {{ product.owner.name }}</small>\\n                </p>\\n                <p>{{ product.price | currency }}</p>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <ngb-rating [(rate)]=\\\"product.averageRating\\\" [starTemplate]=\\\"t\\\" [readonly]=\\\"true\\\" max=\\\"5\\\"></ngb-rating>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <hr>\\n      </div>\\n      <ngb-pagination [collectionSize]=\\\"content.nbHits\\\" [pageSize]=\\\"20\\\" [(page)]=\\\"page\\\" (pageChange)=\\\"getProducts()\\\"></ngb-pagination>\\n    </div>\\n  </div>\\n</section>\\n\\n<ng-template #t let-fill=\\\"fill\\\">\\n  <span *ngIf=\\\"fill === 100\\\" class=\\\"star full\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill === 0\\\" class=\\\"star\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill < 100 && fill > 0\\\" class=\\\"star\\\">\\n    <span class=\\\"half\\\" [style.width.%]=\\\"fill\\\">&#9733;</span>&#9733;\\n  </span>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { RestApiService } from '../rest-api.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss'],\n})\nexport class SearchComponent implements OnInit {\n  query: string;\n  page = 1;\n\n  content: any;\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private data: DataService,\n    private rest: RestApiService,\n  ) {}\n\n  ngOnInit() {\n    this.activatedRoute.params.subscribe(res => {\n      this.query = res['query'];\n      this.page = 1;\n      this.getProducts();\n    });\n  }\n\n  get lower() {\n    return 1 + this.content.hitsPerPage * this.content.page;\n  }\n\n  get upper() {\n    return Math.min(\n      this.content.hitsPerPage * (this.content.page + 1),\n      this.content.nbHits,\n    );\n  }\n\n  async getProducts() {\n    this.content = null;\n    try {\n      const data = await this.rest.get(\n        `http://localhost:3030/api/search?query=${this.query}&page=${this.page -\n          1}`,\n      );\n      console.log(data);\n      console.log(\"content needed\");\n      data['success']\n        ? (this.content = data['content'])\n        : this.data.error(data['message']);\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n  }\n}\n","module.exports = \"<section id=\\\"settings\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">My Account Settings</h4>\\n    <hr>\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!currentSettings\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"currentSettings\\\" class=\\\"card bg-light\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Name</label>\\n            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"currentSettings.name\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Email</label>\\n            <input type=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"currentSettings.email\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Address</label>\\n            <input type=\\\"text\\\" name=\\\"name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"currentSettings.address\\\">\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input type=\\\"checkbox\\\" name=\\\"isSeller\\\" class=\\\"form-check-input\\\" [(ngModel)]=\\\"currentSettings.isSeller\\\"> Is Seller\\n            </label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">New Password</label>\\n            <input type=\\\"password\\\" name=\\\"newPwd\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"currentSettings.newPwd\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Confirm Password</label>\\n            <input type=\\\"password\\\" name=\\\"pwdConfirm\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"currentSettings.pwdConfirm\\\">\\n          </div>\\n          <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"update()\\\" [disabled]=\\\"btnDisabled\\\">Update</button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../data.service';\nimport { RestApiService } from '../rest-api.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n  btnDisabled = false;\n  currentSettings: any;\n\n  constructor(private data: DataService, private rest: RestApiService) { }\n\n  async ngOnInit() {\n    try {\n      if (!this.data.user) {\n        await this.data.getProfile();\n      }\n      this.currentSettings = Object.assign({\n        newPwd: '',\n        pwdConfirm: ''\n      }, this.data.user);\n    } catch (error) {\n      this.data.error(error);\n    }\n  }\n\n  validate(settings) {\n    if (settings['name']) {\n      if (settings['email']) {\n        if (settings['newPwd']) {\n          if (settings['pwdConfirm']) {\n            if (settings['newPwd'] === settings['pwdConfirm']) {\n              if (settings['address']) {\n                return true;\n              } else {\n                this.data.error('Please enter address');\n              }\n            } else {\n              this.data.error('Passwords do not match.');\n            }\n          } else {\n            this.data.error('Please enter confirmation password.');\n          }\n        } else {\n          if (!settings['pwdConfirm']) {\n            return true;\n          } else {\n            this.data.error('Please enter new password.');\n          }\n        }\n      } else {\n        this.data.error('Please enter your email.');\n      }\n    } else {\n      this.data.error('Please enter your name.');\n    }\n  }\n\n  async update() {\n    this.btnDisabled = true;\n    try {\n      if (this.validate(this.currentSettings)) {\n        const data = await this.rest.post(\n          'http://localhost:3030/api/accounts/profile',\n          {\n            name: this.currentSettings['name'],\n            email: this.currentSettings['email'],\n            password: this.currentSettings['newPwd'],\n            isSeller: this.currentSettings['isSeller'],\n            address: this.currentSettings['address']\n          }\n        );\n\n        data['success']\n          ? (this.data.getProfile(), this.data.success(data['message']))\n          : this.data.error(data['message']);\n      }\n    } catch (error) {\n      this.data.error(error['message']);\n    }\n    this.btnDisabled = false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  stripeKey : 'pk_test_fJVwbYvzsvEFPrxZYjVPsSPX'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}